#создай приложение для запоминания информации
from random import shuffle, randint
from PyQt5.QtWidgets import QApplication, QWidget, QLabel, QPushButton, QRadioButton, QGroupBox, QVBoxLayout, QHBoxLayout, QButtonGroup
from PyQt5.QtCore import Qt

class Question():
    def __init__(self, question, right_answer, wrong1, wrong2, wrong3):
        self.question = question
        self.right_answer = right_answer
        self.wrong1 = wrong1
        self.wrong2 = wrong2
        self.wrong3 = wrong3

questions_list = []
questions_list.append(Question('Государственный язык Бразилии', 'Португальский', 'Испанский', 'Итальянский', 'Бразильский'))
questions_list.append(Question('Какое слово состоит из семи одинаковых букв?','семья','ворон','трио','нет такого'))
questions_list.append(Question('Из какой посуды ничего нельзя поесть?','из пустой','без приборов','из бумажной','из любой'))
questions_list.append(Question('На что похожа половина яблока?','на другую половину яблока','на картошку','на землю','на тыкву'))
questions_list.append(Question('Какова форма множественного числа существительного человек?','люди','нету такого','любого','человеки'))
questions_list.append(Question('Какое колесо автомобиля не вращается при спуске с горы?','запасное колесо','все вращаются','игрушечное','которое не касается дороги'))
questions_list.append(Question('Когда в пустом кармане что-нибудь есть?','когда в кармане есть дырка','никогда','когда положишь что нибудь','когда лежит в пакете невидимки'))
questions_list.append(Question('Какой город летает?','Орел','Новосибирск','города не летают','все города'))
questions_list.append(Question('Может ли страус назвать себя птицей?','нет, он не может говорить','да, если захочет','да, он же летает','нет, он страус'))
questions_list.append(Question('Каких камней нет ни в одном море?','сухих','прозрачных','живых','мертвых'))
questions_list.append(Question('В люстре горело 3 лампочки. Одну погасили. Сколько лампочек осталось?','три','одна','две','ни одной'))
questions_list.append(Question('Что в середине капусты?','у','яблоко','дети','сердцевина'))
questions_list.append(Question('Сколько горошин входит в стакан?','нисколько, горошины не ходят','три','шесть максимум','двадцать'))
questions_list.append(Question('Когда мальчика называют женским именем?','соня','никогда, он же мальчик','женя','ночью'))
questions_list.append(Question('Океан, который находится между Америкой и Европой?','атлантический','северо ледовитый','индийский','тихий'))
questions_list.append(Question('Столица Италии?','рим','москва','милан','неаполь'))
questions_list.append(Question('Самая большая река в мире?','амазонка','миссисипи','амур','волга'))


app = QApplication([])

window = QWidget()
window.setWindowTitle('Memory Card')

lb_question = QLabel('Вопрос')
btn_ok = QPushButton('Ответить')
radiogroupbox = QGroupBox('варианты ответов')
rbtn_1 = QRadioButton('1')
rbtn_2 = QRadioButton('2')
rbtn_3 = QRadioButton('3')
rbtn_4 = QRadioButton('4')

radiogroup = QButtonGroup()
radiogroup.addButton(rbtn_1)
radiogroup.addButton(rbtn_2)
radiogroup.addButton(rbtn_3)
radiogroup.addButton(rbtn_4)
#группа ответа
ansgroupbox = QGroupBox('результат теста')
lb_result = QLabel('прав')
lb_correct = QLabel('ответ тут')
layoutres = QVBoxLayout()
layoutres.addWidget(lb_result, alignment = (Qt.AlignLeft | Qt.AlignTop))
layoutres.addWidget(lb_correct, alignment = Qt.AlignHCenter, stretch = 2)
ansgroupbox.setLayout(layoutres)

layoutAns1 = QHBoxLayout()
layoutAns2 = QVBoxLayout()
layoutAns3 = QVBoxLayout()

layoutAns2.addWidget(rbtn_1)
layoutAns2.addWidget(rbtn_2)
layoutAns3.addWidget(rbtn_3)
layoutAns3.addWidget(rbtn_4)

layoutAns1.addLayout(layoutAns2)
layoutAns1.addLayout(layoutAns3)
radiogroupbox.setLayout(layoutAns1)

layoutline1 = QHBoxLayout()
layoutline2 = QHBoxLayout()
layoutline3 = QHBoxLayout()

layoutline1.addWidget(lb_question, alignment = (Qt.AlignHCenter | Qt.AlignVCenter ))
layoutline2.addWidget(radiogroupbox)

layoutline2.addWidget(ansgroupbox)
radiogroupbox.hide()

layoutline3.addStretch(1)
layoutline3.addWidget(btn_ok, stretch = 2)
layoutline3.addStretch(1)
layoutCard = QVBoxLayout()
layoutCard.addLayout(layoutline1, stretch = 2)
layoutCard.addLayout(layoutline2, stretch = 8)
layoutCard.addStretch(1)
layoutCard.addLayout(layoutline3, stretch = 1)
layoutCard.addStretch(1)
layoutCard.setSpacing(5)

def show_result():
    radiogroupbox.hide()
    ansgroupbox.show()
    btn_ok.setText('Следующий вопрос')

def show_question():
    radiogroup.setExclusive(False)
    rbtn_1.setChecked(False)
    rbtn_2.setChecked(False)
    rbtn_3.setChecked(False)
    rbtn_4.setChecked(False)
    radiogroup.setExclusive(True)
    ansgroupbox.hide()
    radiogroupbox.show()
    btn_ok.setText('Ответить')

answers = [rbtn_1, rbtn_2, rbtn_3, rbtn_4]

def ask(q:Question):
    shuffle(answers)
    answers[0].setText(q.right_answer)
    answers[1].setText(q.wrong1)
    answers[2].setText(q.wrong2)
    answers[3].setText(q.wrong3)
    lb_question.setText(q.question)
    lb_correct.setText(q.right_answer)
    show_question() 

def show_correct(res):
    lb_result.setText(res)
    show_result()

def check_answer():
    if answers[0].isChecked():
        show_correct('Правильно!')
        window.score += 1
        print('Статистика \n-всего вопросов:', window.total, '\n-правильных ответов:', window.score)
        print('рэйтинг:', (window.score/window.total*100),'%')
    else:
        if answers[1].isChecked() or answers[2].isChecked() or answers[3].isChecked():
            show_correct('Не правильно!')
            print('Статистика \n-всего вопросов:', window.total, '\n-правильных ответов:', window.score)
            print('рэйтинг:', (window.score/window.total*100),'%')
        
def next_question():
    window.total += 1
    print('Статистика \n-всего вопросов:', window.total, '\n-правильных ответов:', window.score)
    print('рэйтинг:', (window.score/window.total*100),'%')
    #window.cur_question += 1
    #if window.cur_question >= len(questions_list):
        #window.cur_question = 0
    cur_question = randint(0, len(questions_list) - 1 )
    q = questions_list[cur_question]
    ask(q)

def click_ok():
    if btn_ok.text() == 'Ответить':
        check_answer()
    else:
        next_question()

#window.cur_question = -1
window.score = 0
window.total = 0
btn_ok.clicked.connect(click_ok)
next_question()
window.resize(400, 300)
window.setLayout(layoutCard)
window.show()
app.exec_()



